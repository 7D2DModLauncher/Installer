<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SteamSharp</name>
    </assembly>
    <members>
        <member name="T:SteamSharp.Authenticators.UserAuthenticator">
            <summary>
            Authenticatior allowing access to Steam resources protected by user credentials (username, password)
            </summary>
        </member>
        <member name="T:SteamSharp.Authenticators.ISteamAuthenticator">
            <summary>
            Interface for classes used in authenticating against the Steam API.
            </summary>
        </member>
        <member name="M:SteamSharp.Authenticators.ISteamAuthenticator.Authenticate(SteamSharp.SteamClient,SteamSharp.ISteamRequest)">
            <summary>
            Method invoked by the library in order to authenticate for a resource.
            Should not be called directly by consumer code.
            </summary>
            <param name="client">SteamClient instance to authenticate.</param>
            <param name="request">Request requiring authentication.</param>
        </member>
        <member name="M:SteamSharp.Authenticators.UserAuthenticator.Authenticate(SteamSharp.SteamClient,SteamSharp.ISteamRequest)">
            <summary>
            Method invoked by the library in order to authenticate for a resource.
            Should not be called directly by consumer code.
            </summary>
            <param name="client">SteamClient instance to authenticate.</param>
            <param name="request">Request requiring authentication.</param>
        </member>
        <member name="M:SteamSharp.Authenticators.UserAuthenticator.ForProtectedResource(System.String)">
            <summary>
            Invoke method to initialize the authenticator (which should then be added to the Authenticator property of a <see cref="T:SteamSharp.SteamClient"/> instance).
            </summary>
            <param name="accessToken">Access Token generated by the <see cref="M:SteamSharp.Authenticators.UserAuthenticator.GetAccessTokenForUserAsync(System.String,System.String,SteamSharp.Authenticators.UserAuthenticator.SteamGuardAnswer,SteamSharp.Authenticators.UserAuthenticator.CaptchaAnswer)"/> method.</param>
            <returns><see cref="T:SteamSharp.Authenticators.UserAuthenticator"/> object for authentication of a <see cref="T:SteamSharp.SteamClient"/> instance.</returns>
        </member>
        <member name="M:SteamSharp.Authenticators.UserAuthenticator.ForProtectedResource(System.Net.Cookie)">
            <summary>
            Invoke method to initialize the authenticator (which should then be added to the Authenticator property of a <see cref="T:SteamSharp.SteamClient"/> instance).
            </summary>
            <param name="authCookie">Authentication cookie to be passed along with the request.</param>
            <returns><see cref="T:SteamSharp.Authenticators.UserAuthenticator"/> object for authentication of a <see cref="T:SteamSharp.SteamClient"/> instance.</returns>
        </member>
        <member name="M:SteamSharp.Authenticators.UserAuthenticator.ForProtectedResource(SteamSharp.SteamUser)">
            <summary>
            Invoke method to initialize the authenticator (which should then be added to the Authenticator property of a <see cref="T:SteamSharp.SteamClient"/> instance).
            </summary>
            <param name="user">User to be authenticated. This user object must possess a non-null AccessToken property.</param>
            <returns><see cref="T:SteamSharp.Authenticators.UserAuthenticator"/> object for authentication of a <see cref="T:SteamSharp.SteamClient"/> instance.</returns>
        </member>
        <member name="M:SteamSharp.Authenticators.UserAuthenticator.GetAccessTokenForUserAsync(System.String,System.String,SteamSharp.Authenticators.UserAuthenticator.SteamGuardAnswer,SteamSharp.Authenticators.UserAuthenticator.CaptchaAnswer)">
            <summary>
            Queries Steam API with user credentials and returns a valid access token for use in API calls.
            </summary>
            <param name="username">Username of the user requesting authentication.</param>
            <param name="password">Password for the user requesting authentication.</param>
            <param name="steamGuardAnswer"></param>
            <param name="captchaAnswer"></param>
            <returns>Access token which can then be used with the UserAuthenticator.ForProtectedResource method.</returns>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.RSAValues.Success">
            <summary>
            Boolean value indicating whether or not the key generation was successful.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.RSAValues.PublicKeyModulus">
            <summary>
            Modulus value to be used for RSA encryption.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.RSAValues.PublicKeyExponent">
            <summary>
            Exponent value to be used for RSA encryption.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.RSAValues.Timestamp">
            <summary>
            RSA Timestamp
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.SteamTokenResult.IsSuccessful">
            <summary>
            Boolean value indicating whether or not the key request was successful.
            </summary>
        </member>
        <member name="T:SteamSharp.Authenticators.UserAuthenticator.TransferParameters">
            <summary>
            Result object, delivered in SteamTokenResult, which contains data about the access request.
            </summary>
        </member>
        <member name="T:SteamSharp.Authenticators.UserAuthenticator.SteamAccessRequestResult">
            <summary>
            Result object for a Steam GetAccessToken request. It should be evaluated to determine if additional action is needed by the user (SteamGuard, Captcha).
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.SteamAccessRequestResult.SteamResponseMessage">
            <summary>
            Response message from the Steam request.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.SteamAccessRequestResult.IsCaptchaNeeded">
            <summary>
            Flag indicating whether or not a captcha must be solved before a token can be returned.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.SteamAccessRequestResult.CaptchaURL">
            <summary>
            If a captcha must be solved to continue, this will be the URL location of the captcha image.
            If no captcha must be solved, this will be null.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.SteamAccessRequestResult.CaptchaGID">
            <summary>
            If a captcha must be solved to continue, this unique GID cooresponding to this CAPTCHA (needed when submitting the user's solution).
            If no captcha must be solved, this will be null.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.SteamAccessRequestResult.IsSteamGuardNeeded">
            <summary>
            Flag indiciating whether or not a SteamGuard code must be provided before a token can be returned.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.SteamAccessRequestResult.SteamGuardID">
            <summary>
            Indicator of which SteamGuard mechanism was used to procure the code. Must be passed back on SteamGuard completion.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.SteamAccessRequestResult.SteamGuardEmailDomain">
            <summary>
            If available, gives the domain of the user's e-mail address where they can expect the SteamGuard code.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.SteamAccessRequestResult.IsSuccessful">
            <summary>
            Flag indicating whether or not the access token has been issued.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.SteamAccessRequestResult.IsLoginComplete">
            <summary>
            Flag indicating if the login was successful and the transaction has been completed.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.SteamAccessRequestResult.TransferURL">
            <summary>
            URL for Steam Transfer.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.SteamAccessRequestResult.User">
            <summary>
            Object represent the user, complete with metadata and access token.
            </summary>
        </member>
        <member name="T:SteamSharp.Authenticators.UserAuthenticator.CaptchaAnswer">
            <summary>
            Object for passing in the required CAPTCHA information on an authentication.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.CaptchaAnswer.GID">
            <summary>
            GID originally provided for the CaptchaGID as part of the <see cref="T:SteamSharp.Authenticators.UserAuthenticator.SteamAccessRequestResult"/>.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.CaptchaAnswer.SolutionText">
            <summary>
            String representing the answer for the CAPTCHA. This should be provided by the user (unless you feel like spinning up some epic pattern recognition :)).
            </summary>
        </member>
        <member name="T:SteamSharp.Authenticators.UserAuthenticator.SteamGuardAnswer">
            <summary>
            Object for passing in the required SteamGuard information on an authentication.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.SteamGuardAnswer.ID">
            <summary>
            GID originally provided for the SteamGuardID as part of the <see cref="T:SteamSharp.Authenticators.UserAuthenticator.SteamAccessRequestResult"/>.
            </summary>
        </member>
        <member name="P:SteamSharp.Authenticators.UserAuthenticator.SteamGuardAnswer.SolutionText">
            <summary>
            String representing the answer for the SteamGuard, as obtained by the user from their e-mail (or some other communication proof).
            </summary>
        </member>
        <member name="T:SteamSharp.Authenticators.APIKeyAuthenticator">
            <summary>
            Authenticatior allowing access to Steam resources protected by an API key.
            </summary>
        </member>
        <member name="M:SteamSharp.Authenticators.APIKeyAuthenticator.ForProtectedResource(System.String)">
            <summary>
            Invoke method to initialize the authenticator (which should then be added to the Authenticator property of a <see cref="T:SteamSharp.SteamClient"/> instance).
            </summary>
            <param name="apiKey">Steam API Key (available at http://steamcommunity.com/dev/apikey).</param>
            <returns><see cref="T:SteamSharp.Authenticators.APIKeyAuthenticator"/> object for authentication of a <see cref="T:SteamSharp.SteamClient"/> instance.</returns>
        </member>
        <member name="M:SteamSharp.Authenticators.APIKeyAuthenticator.Authenticate(SteamSharp.SteamClient,SteamSharp.ISteamRequest)">
            <summary>
            Method invoked by the library in order to authenticate for a resource.
            Should not be called directly by consumer code.
            </summary>
            <param name="client">SteamClient instance to authenticate.</param>
            <param name="request">Request requiring authentication.</param>
        </member>
        <member name="T:SteamSharp.SteamAPIInterface">
            <summary>
            Available Steam Web APIs
            </summary>
        </member>
        <member name="F:SteamSharp.SteamAPIInterface.Unknown">
            <summary>
            Unknown Steam interface.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamAPIInterface.ISteamNews">
            <summary>
            ISteamNews interface.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamAPIInterface.ISteamUserStats">
            <summary>
            ISteamUserStats interface.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamAPIInterface.ISteamUser">
            <summary>
            ISteamUser interface.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamAPIInterface.IPlayerService">
            <summary>
            IPlayerService interface.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamMethodVersion">
            <summary>
            Possible values for API version. NOTE: Not all APIs contain all versions listed.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamMethodVersion.Unknown">
            <summary>
            Unknown version of the Method API.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamMethodVersion.v0001">
            <summary>
            Version 1 of the Steam API's method.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamMethodVersion.v0002">
            <summary>
            Version 2 of the Steam API's method.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamMethodVersion.v0003">
            <summary>
            Version 3 of the Steam API's method.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamMethodVersion.v0004">
            <summary>
            Version 4 of the Steam API's method.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamMethodVersion.v0005">
            <summary>
            Version 5 of the Steam API's method.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamMethodVersion.v0006">
            <summary>
            Version 6 of the Steam API's method.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamMethodVersion.v0007">
            <summary>
            Version 7 of the Steam API's method.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamMethodVersion.v0008">
            <summary>
            Version 8 of the Steam API's method.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamMethodVersion.v0009">
            <summary>
            Version 9 of the Steam API's method.
            </summary>
        </member>
        <member name="F:SteamSharp.SteamMethodVersion.v0010">
            <summary>
            Version 10 of the Steam API's method.
            </summary>
        </member>
        <member name="T:SteamSharp.ResponseStatus">
            <summary>
            HTTP Response States
            </summary>
        </member>
        <member name="F:SteamSharp.ResponseStatus.None">
            <summary>
            No response has been received from Steam.
            </summary>
        </member>
        <member name="F:SteamSharp.ResponseStatus.Completed">
            <summary>
            The transaction with the Steam API has been completed, full response text is received.
            </summary>
        </member>
        <member name="F:SteamSharp.ResponseStatus.Error">
            <summary>
            The transaction with the Steam API completed but resulted in an error state.
            </summary>
        </member>
        <member name="F:SteamSharp.ResponseStatus.TimedOut">
            <summary>
            The transaction with the Steam API timed out before it could be completed.
            </summary>
        </member>
        <member name="F:SteamSharp.ResponseStatus.Aborted">
            <summary>
            The request to the Steam API was aborted before it could be completed.
            </summary>
        </member>
        <member name="T:SteamSharp.ParameterType">
            <summary>
             The valid types of parameters that can be added to requests
            </summary>
        </member>
        <member name="F:SteamSharp.ParameterType.GetOrPost">
            <summary>
            Parameter to add to either the URI or request body, depending on which <see cref="T:System.Net.Http.HttpMethod"/> is invoked.
            </summary>
        </member>
        <member name="F:SteamSharp.ParameterType.UrlSegment">
            <summary>
            Specifies the parameter to be a find-and-replace section of the URI's query string (i.e. /resource/{foo} --> /resource/bar).
            </summary>
        </member>
        <member name="F:SteamSharp.ParameterType.HttpHeader">
            <summary>
            Indicates the parameter is intended to be added as an HTTP header on the request.
            </summary>
        </member>
        <member name="F:SteamSharp.ParameterType.RequestBody">
            <summary>
            Specifies this data should be added to the body of the POST message. If the HTTPMethod is chosen to be GET, this data will be dropped.
            </summary>
        </member>
        <member name="F:SteamSharp.ParameterType.QueryString">
            <summary>
            Indicates the parameter should be added to the query string, regardless of <see cref="T:System.Net.Http.HttpMethod"/> type.
            </summary>
        </member>
        <member name="T:SteamSharp.PostDataFormat">
            <summary>
            Data format for SteamRequests.
            Raw will be sent without Content-Type and without serialization.
            Json will be serialized and sent via Content-Type application/json.
            </summary>
        </member>
        <member name="F:SteamSharp.PostDataFormat.Raw">
            <summary>
            Will not serialize the request into any format. Data added to the body will be sent as raw text, and will be sent without a Content-Type header.
            </summary>
        </member>
        <member name="F:SteamSharp.PostDataFormat.Json">
            <summary>
            Data added to the POST body will be serialized into JSON and the Content-Type of application/json will be added to the request.
            </summary>
        </member>
        <member name="T:SteamSharp.PlayerRelationshipType">
            <summary>
            Relationship filter for profile/friend's list filtering. Possible values: All, Friend
            </summary>
        </member>
        <member name="F:SteamSharp.PlayerRelationshipType.All">
            <summary>
            Filter to retrieve all users from a user's profile, regardless of friendship affiliation.
            </summary>
        </member>
        <member name="F:SteamSharp.PlayerRelationshipType.Friend">
            <summary>
            Filter to retrieve only friends of a particular user from their profile.
            </summary>
        </member>
        <member name="T:SteamSharp.RequestedLangage">
            <summary>
            Certain Steam APIs allow a language to be provided. In those instances, use this enum in order to specify the return language.
            The languages the Steam API supports are limited.
            </summary>
        </member>
        <member name="F:SteamSharp.RequestedLangage.English">
            <summary>
            English language.
            </summary>
        </member>
        <member name="F:SteamSharp.RequestedLangage.Spanish">
            <summary>
            Spanish language.
            </summary>
        </member>
        <member name="F:SteamSharp.RequestedLangage.Swedish">
            <summary>
            Swedish language.
            </summary>
        </member>
        <member name="F:SteamSharp.RequestedLangage.Russian">
            <summary>
            Russian language.
            </summary>
        </member>
        <member name="F:SteamSharp.RequestedLangage.Portuguese">
            <summary>
            Portuguese language.
            </summary>
        </member>
        <member name="F:SteamSharp.RequestedLangage.German">
            <summary>
            German language.
            </summary>
        </member>
        <member name="F:SteamSharp.RequestedLangage.Dutch">
            <summary>
            Dutch language.
            </summary>
        </member>
        <member name="F:SteamSharp.RequestedLangage.Japanese">
            <summary>
            Japanese language.
            </summary>
        </member>
        <member name="T:SteamSharp.PersonaState">
            <summary>
            The user's current status.
            If the player's profile is private, this will always be "Offline", except if the user has set their status to looking to trade or looking to play (due to a bug, not long term behavior!).
            </summary>
        </member>
        <member name="F:SteamSharp.PersonaState.Offline">
            <summary>
            User is offline.
            </summary>
        </member>
        <member name="F:SteamSharp.PersonaState.Online">
            <summary>
            User is online.
            </summary>
        </member>
        <member name="F:SteamSharp.PersonaState.Busy">
            <summary>
            User is online but busy.
            </summary>
        </member>
        <member name="F:SteamSharp.PersonaState.Away">
            <summary>
            User is only but away.
            </summary>
        </member>
        <member name="F:SteamSharp.PersonaState.Snooze">
            <summary>
            User is snoozing.
            </summary>
        </member>
        <member name="F:SteamSharp.PersonaState.LookingToTrade">
            <summary>
            User is online and looking to trade.
            </summary>
        </member>
        <member name="F:SteamSharp.PersonaState.LookingToPlay">
            <summary>
            User is online and looking to play.
            </summary>
        </member>
        <member name="T:SteamSharp.CommunityVisibilityState">
            <summary>
            This represents whether the profile is visible or not, and if it is visible, why you are allowed to see it.
            </summary>
        </member>
        <member name="F:SteamSharp.CommunityVisibilityState.Private">
            <summary>
            User's profile is private.
            </summary>
        </member>
        <member name="F:SteamSharp.CommunityVisibilityState.Public">
            <summary>
            User's profile is public.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamAuthenticationException">
            <summary>
            Exception thrown when Steam encounters an error while attempting to authenticate a request.
            </summary>
        </member>
        <member name="M:SteamSharp.SteamAuthenticationException.#ctor(System.String)">
            <summary>
            Exception thrown when Steam encounters an error while attempting to authenticate a request.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:SteamSharp.SteamAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Exception thrown when Steam encounters an error while attempting to authenticate a request.
            </summary>
            <param name="message">Exception message</param>
            <param name="exception">Exception which caused the error.</param>
        </member>
        <member name="T:SteamSharp.SteamRequestException">
            <summary>
            Exception thrown when Steam encounters an error while attempting to execute a request.
            </summary>
        </member>
        <member name="M:SteamSharp.SteamRequestException.#ctor(System.String)">
            <summary>
            Exception thrown when Steam encounters an error while attempting to execute a request.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:SteamSharp.SteamRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Exception thrown when Steam encounters an error while attempting to execute a request.
            </summary>
            <param name="message">Exception message</param>
            <param name="exception">Exception which identifies the error.</param>
        </member>
        <member name="M:SteamSharp.SteamRequestException.#ctor(System.String,SteamSharp.ISteamResponse)">
            <summary>
            Exception thrown when Steam encounters an error while attempting to execute a request.
            </summary>
            <param name="message">Exception message</param>
            <param name="response">Response received from Steam which is either in an error state or delivered data which is in error.</param>
        </member>
        <member name="P:SteamSharp.SteamRequestException.InnerException">
            <summary>
            Exception encountered causing this exception to be thrown. May be a deserialization exception or the exception from an HTTP request.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequestException.IsDeserializationIssue">
            <summary>
            Indicates whether or not this exception was caused from the inability to deserialize the Steam API response.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequestException.IsRequestIssue">
            <summary>
            Indiciates whether or not this exception was caused from an invalid HTTP request.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequestException.RequestErrorMessage">
            <summary>
            The feedback from a bad HTTP Request. If none, this value will be null.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequestException.Response">
            <summary>
            Object containing the processed HTTP response, as well as the initial <see cref="T:SteamSharp.ISteamRequest"/> object and raw HTTPResponseMessage.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequestException.StatusCode">
            <summary>
            HTTP Status Code of the transaction. If no HTTP request was made, this value will be null.
            </summary>
        </member>
        <member name="T:SteamSharp.Helpers.BigInteger">
            <summary>
            BigInteger library by Chew Keong TAN (See project source for info).
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.#ctor">
            <summary>
            Constructor (Default value for BigInteger is 0
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.#ctor(System.Int64)">
            <summary>
            Constructor (Default value provided by long)
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.#ctor(System.UInt64)">
            <summary>
            Constructor (Default value provided by ulong)
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.#ctor(SteamSharp.Helpers.BigInteger)">
            <summary>
            Constructor (Default value provided by BigInteger)
            </summary>
            <param name="bi"></param>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.#ctor(System.String,System.Int32)">
            <summary>
            Constructor (Default value provided by a string of digits of the specified base)
            </summary>
            <param name="value"></param>
            <param name="radix"></param>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.#ctor(System.Byte[])">
            <summary>
            Constructor (Default value provided by an array of bytes)
            </summary>
            <param name="inData"></param>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.#ctor(System.Byte[],System.Int32)">
            <summary>
            Constructor (Default value provided by an array of bytes of the specified length.)
            </summary>
            <param name="inData"></param>
            <param name="inLen"></param>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.#ctor(System.UInt32[])">
            <summary>
            Constructor (Default value provided by an array of unsigned integers)
            </summary>
            <param name="inData"></param>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_Implicit(System.Int64)~SteamSharp.Helpers.BigInteger">
            <summary>
            Overloading of the typecast operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_Implicit(System.UInt64)~SteamSharp.Helpers.BigInteger">
            <summary>
            Overloading of the typecast operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_Implicit(System.Int32)~SteamSharp.Helpers.BigInteger">
            <summary>
            Overloading of the typecast operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_Implicit(System.UInt32)~SteamSharp.Helpers.BigInteger">
            <summary>
            Overloading of the typecast operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_Addition(SteamSharp.Helpers.BigInteger,SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of addition operator
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_Increment(SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of the unary ++ operator
            </summary>
            <param name="bi1"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_Subtraction(SteamSharp.Helpers.BigInteger,SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of subtraction operator
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_Decrement(SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of the unary -- operator
            </summary>
            <param name="bi1"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_Multiply(SteamSharp.Helpers.BigInteger,SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of multiplication operator
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_LeftShift(SteamSharp.Helpers.BigInteger,System.Int32)">
            <summary>
            Overloading of unary operators
            </summary>
            <param name="bi1"></param>
            <param name="shiftVal"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_RightShift(SteamSharp.Helpers.BigInteger,System.Int32)">
            <summary>
            Overloading of unary >> operators
            </summary>
            <param name="bi1"></param>
            <param name="shiftVal"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_OnesComplement(SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of the NOT operator (1's complement)
            </summary>
            <param name="bi1"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_UnaryNegation(SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of the NEGATE operator (2's complement)
            </summary>
            <param name="bi1"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_Equality(SteamSharp.Helpers.BigInteger,SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of equality operator
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_Inequality(SteamSharp.Helpers.BigInteger,SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of equality operator
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.Equals(System.Object)">
            <summary>
            Overloading of equality operator
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_GreaterThan(SteamSharp.Helpers.BigInteger,SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of inequality operator
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_LessThan(SteamSharp.Helpers.BigInteger,SteamSharp.Helpers.BigInteger)">
            <summary>
            operator
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_GreaterThanOrEqual(SteamSharp.Helpers.BigInteger,SteamSharp.Helpers.BigInteger)">
            <summary>
            operator
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_LessThanOrEqual(SteamSharp.Helpers.BigInteger,SteamSharp.Helpers.BigInteger)">
            <summary>
            operator
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_Division(SteamSharp.Helpers.BigInteger,SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of division operator
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_Modulus(SteamSharp.Helpers.BigInteger,SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of modulus operator
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_BitwiseAnd(SteamSharp.Helpers.BigInteger,SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of bitwise AND operator
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_BitwiseOr(SteamSharp.Helpers.BigInteger,SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of bitwise OR operator
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.op_ExclusiveOr(SteamSharp.Helpers.BigInteger,SteamSharp.Helpers.BigInteger)">
            <summary>
            Overloading of bitwise XOR operator
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.ToString">
            <summary>
            Returns a string representing the BigInteger in base 10.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.BigInteger.getBytesRaw">
            <summary>
            getBytesRaw
            </summary>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.CryptoMathematics.BitwiseXOR(System.Byte[],System.Byte[])">
            <summary>
            Bitwise XOR for 2 byte arrays.  Arrays must be the same length.
            </summary>
            <param name="t1">Left side for comparison</param>
            <param name="t2">Right side for comparison</param>
            <returns>Resulting byte array</returns>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.CryptoMathematics.BitwiseXOR(System.Byte,System.Byte)">
            <summary>
            Bitwise XOR for 2 Bytes.
            </summary>
            <param name="t1">Left side for comparison</param>
            <param name="t2">Right side for comparison</param>
            <returns>Resulting byte</returns>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.CryptoMathematics.I2OSP(System.Int32,System.Int32)">
            <summary>
            Convert the input Integer to an Octet String.
            </summary>
            <param name="x">input integer</param>
            <param name="size">size in octets (bytes)</param>
            <returns>Resulting byte array of specified length</returns>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.CryptoMathematics.OAEPMGF(System.Byte[],System.Int32,System.Int32,SteamSharp.Helpers.Cryptography.HashProviders.IHashProvider)">
            <summary>
            Mask generation function.
            </summary>
            <param name="seed">Seed</param>
            <param name="maskLen">Length of generated mask</param>
            <param name="hashLength">Length of the hash produced by the supplied hash provider</param>
            <param name="hashProvider">Hash provider to use in mask generation</param>
            <returns>Generated mask of specified length</returns>
        </member>
        <member name="T:SteamSharp.Helpers.Extensions">
            <summary>
            Class containing extension methods for SteamSharp.
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.Extensions.HexToByteArray(System.String)">
            <summary>
            Converts a valid hexadecimal string into is byte array equivalent.
            </summary>
            <param name="hex">Valid hexadecimal string of even length.</param>
            <returns>Byte array equivalent of entered hex string.</returns>
        </member>
        <member name="M:SteamSharp.Helpers.Extensions.ToByteArray(System.Collections.BitArray)">
            <summary>
            Converts a BitArray into its byte[] equivalent.
            </summary>
            <param name="bits">Target BitArray</param>
            <returns>byte[] representing the BitArray object.</returns>
        </member>
        <member name="T:SteamSharp.Helpers.Cryptography.HashProviders">
            <summary>
            HashProviders for use in the RSAHelper
            </summary>
        </member>
        <member name="T:SteamSharp.Helpers.Cryptography.HashProviders.IHashProvider">
            <summary>
            Base interface that must be implemented by all hash providers.
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.HashProviders.IHashProvider.ComputeHash(System.Byte[])">
            <summary>
            Compute the hash of the input byte array and return the hashed value as a byte array.
            </summary>
            <param name="inputData">Input data</param>
            <returns>Hashed data.</returns>
        </member>
        <member name="T:SteamSharp.Helpers.Cryptography.HashProviders.SHA1">
            <summary>
            Hash provider based on SHA1
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.HashProviders.SHA1.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.HashProviders.SHA1.SteamSharp#Helpers#Cryptography#HashProviders#IHashProvider#ComputeHash(System.Byte[])">
            <summary>
            Compute the hash of the input byte array and return the hashed value as a byte array.
            </summary>
            <param name="inputData">Input data</param>
            <returns>SHA1 Hashed data.</returns>
        </member>
        <member name="T:SteamSharp.Helpers.Cryptography.PaddingProviders">
            <summary>
            Padding Providers for use in RSA.
            </summary>
        </member>
        <member name="T:SteamSharp.Helpers.Cryptography.PaddingProviders.IPaddingProvider">
            <summary>
            Base interface that must be implemented by all hash providers.
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.IPaddingProvider.EncodeMessage(System.Byte[],SteamSharp.Helpers.Cryptography.RSAParameters)">
            <summary>
            Adds padding to the input data and returns the padded data.
            </summary>
            <param name="dataBytes">Data to be padded prior to encryption</param>
            <param name="parameters">RSA Parameters used for padding computation</param>
            <returns>Padded message</returns>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.IPaddingProvider.DecodeMessage(System.Byte[],SteamSharp.Helpers.Cryptography.RSAParameters)">
            <summary>
            Removes padding that was added to the unencrypted data prior to encryption.
            </summary>
            <param name="dataBytes">Data to have padding removed</param>
            <param name="parameters">RSA Parameters used for padding computation</param>
            <returns>Unpadded message</returns>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.IPaddingProvider.GetMaxMessageLength(SteamSharp.Helpers.Cryptography.RSAParameters)">
            <summary>
            Gets the maximum message length for this padding provider.
            </summary>
            <param name="parameters">RSA Parameters used for padding computation</param>
            <returns>Max message length</returns>
        </member>
        <member name="T:SteamSharp.Helpers.Cryptography.PaddingProviders.NoPadding">
            <summary>
            Padding provider which uses no padding on message encrypt and decrypt. 
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.NoPadding.EncodeMessage(System.Byte[],SteamSharp.Helpers.Cryptography.RSAParameters)">
            <summary>
            Adds padding to the input data and returns the padded data.
            </summary>
            <param name="dataBytes">Data to be padded prior to encryption</param>
            <param name="parameters">RSA Parameters</param>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.NoPadding.DecodeMessage(System.Byte[],SteamSharp.Helpers.Cryptography.RSAParameters)">
            <summary>
            Removes padding that was added to the unencrypted data prior to encryption.
            </summary>
            <param name="dataBytes">Data to have padding removed</param>
            <param name="parameters">RSA Parameters used for padding computation</param>
            <returns>Unpadded message</returns>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.NoPadding.GetMaxMessageLength(SteamSharp.Helpers.Cryptography.RSAParameters)">
            <summary>
            Gets the maximum message length for this padding provider.
            </summary>
            <param name="parameters">RSA Parameters used for padding computation</param>
            <returns>Max message length</returns>
        </member>
        <member name="T:SteamSharp.Helpers.Cryptography.PaddingProviders.OAEP">
            <summary>
            Padding provider based on the OAEP standard.
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.OAEP.#ctor">
            <summary>
            Default constructor.  Uses the default SHA1 Hash for OAEP hash calculation.
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.OAEP.#ctor(SteamSharp.Helpers.Cryptography.HashProviders.IHashProvider,System.Int32)">
            <summary>
            Internal constructor (used to perform OAEP with a different hash and hash output length
            </summary>
            <param name="ohashProvider"></param>
            <param name="hashLength"></param>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.OAEP.EncodeMessage(System.Byte[],SteamSharp.Helpers.Cryptography.RSAParameters)">
            <summary>
            Adds padding to the input data and returns the padded data.
            </summary>
            <param name="dataBytes">Data to be padded prior to encryption</param>
            <param name="parameters">RSA Parameters used for padding computation</param>
            <returns>Padded message</returns>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.OAEP.DecodeMessage(System.Byte[],SteamSharp.Helpers.Cryptography.RSAParameters)">
            <summary>
            Removes padding that was added to the unencrypted data prior to encryption.
            </summary>
            <param name="dataBytes">Data to have padding removed</param>
            <param name="parameters">RSA Parameters used for padding computation</param>
            <returns>Unpadded message</returns>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.OAEP.GetMaxMessageLength(SteamSharp.Helpers.Cryptography.RSAParameters)">
            <summary>
            Gets the maximum message length for this padding provider.
            </summary>
            <param name="parameters">RSA Parameters used for padding computation</param>
            <returns>Max message length</returns>
        </member>
        <member name="T:SteamSharp.Helpers.Cryptography.PaddingProviders.PKCS1v1_5">
            <summary>
            Padding provider based on the PKCS#1 v1.5 standard.
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.PKCS1v1_5.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.PKCS1v1_5.EncodeMessage(System.Byte[],SteamSharp.Helpers.Cryptography.RSAParameters)">
            <summary>
            Adds padding to the input data and returns the padded data.
            </summary>
            <param name="dataBytes">Data to be padded prior to encryption</param>
            <param name="parameters">RSA Parameters used for padding computation</param>
            <returns>Padded message</returns>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.PKCS1v1_5.DecodeMessage(System.Byte[],SteamSharp.Helpers.Cryptography.RSAParameters)">
            <summary>
            Removes padding that was added to the unencrypted data prior to encryption.
            </summary>
            <param name="dataBytes">Data to have padding removed</param>
            <param name="parameters">RSA Parameters used for padding computation</param>
            <returns>Unpadded message</returns>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.PaddingProviders.PKCS1v1_5.GetMaxMessageLength(SteamSharp.Helpers.Cryptography.RSAParameters)">
            <summary>
            Gets the maximum message length for this padding provider.
            </summary>
            <param name="parameters">RSA Parameters used for padding computation</param>
            <returns>Max message length</returns>
        </member>
        <member name="T:SteamSharp.Helpers.Cryptography.RSAHelper">
            <summary>
            RSA Encryption/Decryption.
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.RSAHelper.#ctor">
            <summary>
            Initializes the RSA Helper class with the necessary keys for encryption and decryption.
            </summary>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.RSAHelper.#ctor(System.Boolean)">
            <summary>
            Initializes the RSA Helper class with the necessary keys for encryption and decryption.
            </summary>
            <param name="useOAEP">Set to true if you wish to use OAEP as the padding provider for encryption/decryption.</param>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.RSAHelper.#ctor(SteamSharp.Helpers.Cryptography.PaddingProviders.IPaddingProvider)">
            <summary>
            Initializes the RSA Helper class with the necessary keys for encryption and decryption.
            </summary>
            <param name="padding">Padding Provider to use for encoding and decoding of the message.</param>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.RSAHelper.ImportParameters(SteamSharp.Helpers.Cryptography.RSAParameters)">
            <summary>
            Import an existing set of RSA Parameters.  If only the public key is to be loaded, 
            Do not set the P, Q, DP, DQ, IQ or D values.  If P, Q or D are set, the parameters 
            will automatically be validated for existence of private key.
            </summary>
            <param name="parameters">RSAParameters object containing key data.</param>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.RSAHelper.Encrypt(System.Byte[])">
            <summary>
            Encrypts a message using the set RSA modulus and exponent. Uses UTF-8 encoding on the message.
            </summary>
            <param name="message">Message to be encrypted.</param>
            <returns>Byte array containing the cipher text</returns>
        </member>
        <member name="M:SteamSharp.Helpers.Cryptography.RSAHelper.Decrypt(System.Byte[],System.Byte[])">
            <summary>
            Encrypts a message using the set RSA modulus and a given private key. Uses UTF-8 encoding on the message.
            </summary>
            <param name="cipherText">Cipher text.</param>
            <param name="privateKey">Private key which is paired with the generation of the initial RSA keys.</param>
            <returns>Byte array containing the plain text message.</returns>
            
        </member>
        <member name="T:SteamSharp.Helpers.Cryptography.RSAParameters">
            <summary>
            RSAParameters for Import / Export
            </summary>
        </member>
        <member name="P:SteamSharp.Helpers.Cryptography.RSAParameters.E">
            <summary>
            Parameter value E
            </summary>
        </member>
        <member name="P:SteamSharp.Helpers.Cryptography.RSAParameters.N">
            <summary>
            Parameter value N
            </summary>
        </member>
        <member name="P:SteamSharp.Helpers.Cryptography.RSAParameters.D">
            <summary>
            Parameter value D
            </summary>
        </member>
        <member name="T:SteamSharp.ISteamRequest">
            <summary>
            (Interface) Container for data used to make Steam API requests.
            </summary>
        </member>
        <member name="M:SteamSharp.ISteamRequest.AddBody(System.Object)">
            <summary>
            Serializes object obj into JSON, which is then used as the Body of the HTTP request.
            </summary>
            <param name="obj">Object to be serialized and used as the Body of the HTTP request.</param>
            <returns>This request</returns>
        </member>
        <member name="M:SteamSharp.ISteamRequest.AddUrlSegment(System.String,System.String)">
            <summary>
            Registers a URL Segement with the request. This will replace {name} with value in the specified Resource.
            </summary>
            <param name="name">Name of the segement to register.</param>
            <param name="value">Value to replace the named segement with.</param>
            <returns>This request.</returns>
        </member>
        <member name="M:SteamSharp.ISteamRequest.AddHeader(System.String,System.String)">
            <summary>
            Adds an custom HTTP Header to the request.
            </summary>
            <param name="name">The name of the header (i.e. X-CustomHeader)</param>
            <param name="value">The value of the custom header</param>
            <returns>This request</returns>
        </member>
        <member name="M:SteamSharp.ISteamRequest.AddParameter(SteamSharp.SteamRequestParameter)">
            <summary>
            Adds a parameter to the request.
            </summary>
            <param name="param"><see cref="T:SteamSharp.SteamRequestParameter"/> to add to the request.</param>
            <returns>This request</returns>
        </member>
        <member name="M:SteamSharp.ISteamRequest.AddParameter(System.String,System.Object)">
            <summary>
            Adds a parameter to the request.
            </summary>
            <param name="name">Name of the parameter</param>
            <param name="value">Value of the parameter</param>
            <returns>This request</returns>
        </member>
        <member name="M:SteamSharp.ISteamRequest.AddParameter(System.String,System.Object,SteamSharp.ParameterType)">
            <summary>
            Adds a parameter to the request. 
            </summary>
            <param name="name">Name of the parameter</param>
            <param name="value">Value of the parameter</param>
            <param name="type">The type of the parameter</param>
            <returns>This request</returns>
        </member>
        <member name="M:SteamSharp.ISteamRequest.AddCookie(System.Net.Cookie)">
            <summary>
            Adds a <see cref="T:System.Net.Cookie"/> to the request.
            </summary>
            <param name="cookie"><see cref="T:System.Net.Cookie"/> to be added to the request.</param>
            <returns>This request</returns>
        </member>
        <member name="M:SteamSharp.ISteamRequest.IncreaseNumAttempts">
            <summary>
            Method that allows the request's attempt count to be incremented.
            Should only be called by the SteamClient doing an execution operation.
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamRequest.Parameters">
            <summary>
            Container of all parameters needing to be passed to the Steam API.
            See AddParameter() for adding additional parameters to the request.
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamRequest.Cookies">
            <summary>
            Container for cookies to be added to the HTTP request. To add cookies use AddCookie( Cookie ).
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamRequest.Method">
            <summary>
            Indicates the standard HTTP method that should be used for this request.
            This value defaults to GET.
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamRequest.DataFormat">
            <summary>
            Data Format to use for POST Requests.
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamRequest.Resource">
            <summary>
            The URI the request will be made against.
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamRequest.Timeout">
            <summary>
            Timeout in milliseconds to be used for the request. If this time is exceeded the request will fail.
            If not set, defaults to Timeout value in the SteamClient executing this request.
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamRequest.SteamInterface">
            <summary>
            Steam API Interface to access (i.e. ISteamNews)
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamRequest.SteamApiMethod">
            <summary>
            Method within the Steam API to use (i.e. GetNewsForApp)
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamRequest.SteamMethodVersion">
            <summary>
            Version of the API being requested (i.e. v0001)
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamRequest.Attempts">
            <summary>
            Provides the number of times this particular request has been attempted (regardless of success).
            </summary>
        </member>
        <member name="T:SteamSharp.ISteamResponse">
            <summary>
            (Interface) Container for data received from Steam API requests.
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamResponse.Request">
            <summary>
            Reference to the initial request which produced this response.
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamResponse.HttpResponse">
            <summary>
            Contains the raw <see cref="T:System.Net.Http.HttpResponseMessage"/> object returned by the web request.
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamResponse.Cookies">
            <summary>
            Cookie container for all cookies received back from the transaction call.
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamResponse.ErrorMessage">
            <summary>
            If an error was encountered, this records the exception text. Null otherwise.
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamResponse.ErrorException">
            <summary>
            If an error was encountered, this records the relevant exception. Null otherwise.
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamResponse.ResponseStatus">
            <summary>
            Contains the state of the response. See <see cref="P:SteamSharp.ISteamResponse.ResponseStatus"/> for possible values.
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamResponse.StatusCode">
            <summary>
            HTTP response status code
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamResponse.StatusDescription">
            <summary>
            HTTP response status description
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamResponse.IsSuccessful">
            <summary>
            Indicates whether or not the response was a success.
            </summary>
        </member>
        <member name="P:SteamSharp.ISteamResponse.Content">
            <summary>
            Response content
            </summary>
        </member>
        <member name="T:SteamSharp.PlayerService">
            <summary>
            Class allowing for abstracted querying of the IPlayerService interface
            </summary>
        </member>
        <member name="T:SteamSharp.SteamInterface">
            <summary>
            Base class for abstraction classes of Steam API interfaces.
            </summary>
        </member>
        <member name="M:SteamSharp.SteamInterface.VerifyAndDeserialize``1(SteamSharp.ISteamResponse)">
            <summary>
            Utility class to validate the Steam Response for common issues and, if none are found, attempt to deserialize the response's content.
            </summary>
            <typeparam name="T">Object type for the <see cref="T:SteamSharp.ISteamResponse"/> to be deserialized into.</typeparam>
            <param name="response">Response object provided by the SteamClient's execution method.</param>
            <returns>Deserialized representation of <see cref="T:SteamSharp.ISteamResponse"/>'s server-recevied content.</returns>
        </member>
        <member name="M:SteamSharp.SteamInterface.GetLanguageFromEnum(SteamSharp.RequestedLangage)">
            <summary>
            Utility method providing translation of valid language possibilities for certain Steam APIs.
            </summary>
            <param name="language">Target language</param>
            <returns>Steam-understandable string representation of the target language.</returns>
        </member>
        <member name="M:SteamSharp.PlayerService.GetOwnedGames(SteamSharp.SteamClient,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns a list of games a player owns along with some playtime information, if the profile is publicly visible.
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetOwnedGames_.28v0001.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return friend's list for.</param>
            <param name="getAppInfo">Include game name and logo information in the output?</param>
            <param name="getPlayedFreeGames">By default, free games are excluded (as technically everyone owns them). If flag is true, all games the user has played at some point will be returned.</param>
            <returns><see cref="T:SteamSharp.PlayerService.OwnedGames"/> object containing information about the specified user's game collection.</returns>
        </member>
        <member name="M:SteamSharp.PlayerService.GetOwnedGamesAsync(SteamSharp.SteamClient,System.String,System.Boolean,System.Boolean)">
            <summary>
            (Async) Returns a list of games a player owns along with some playtime information, if the profile is publicly visible.
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetOwnedGames_.28v0001.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return friend's list for.</param>
            <param name="getAppInfo">Include game name and logo information in the output?</param>
            <param name="getPlayedFreeGames">By default, free games are excluded (as technically everyone owns them). If flag is true, all games the user has played at some point will be returned.</param>
            <returns><see cref="T:SteamSharp.PlayerService.OwnedGames"/> object containing information about the specified user's game collection.</returns>
        </member>
        <member name="M:SteamSharp.PlayerService.GetRecentlyPlayedGames(SteamSharp.SteamClient,System.String,System.Int32)">
            <summary>
            Returns a list of games a player has played in the last two weeks.
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetRecentlyPlayedGames_.28v0001.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return friend's list for.</param>
            <param name="maxSelect">Optionally limit response to a certain number of games. Defaults to -1, meaning no limit is imposed.</param>
            <returns><see cref="T:SteamSharp.PlayerService.OwnedGames"/> object containing information about the specified user's game collection.</returns>
        </member>
        <member name="M:SteamSharp.PlayerService.GetRecentlyPlayedGamesAsync(SteamSharp.SteamClient,System.String,System.Int32)">
            <summary>
            (Async) Returns a list of games a player has played in the last two weeks.
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetRecentlyPlayedGames_.28v0001.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return friend's list for.</param>
            <param name="maxSelect">Optionally limit response to a certain number of games. Defaults to -1, meaning no limit is imposed.</param>
            <returns><see cref="T:SteamSharp.PlayerService.OwnedGames"/> object containing information about the specified user's game collection.</returns>
        </member>
        <member name="M:SteamSharp.PlayerService.IsPlayingSharedGame(SteamSharp.SteamClient,System.String,System.Int32)">
            <summary>
            Returns the original owner's SteamID if a borrowing account is currently playing the specified game. Null if not borrowed, or the borrower isn't currently playing the game.
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#IsPlayingSharedGame_.28v0001.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return friend's list for.</param>
            <param name="gameID">GameID (AppID) of the game you're interested in querying.</param>
            <returns></returns>
        </member>
        <member name="M:SteamSharp.PlayerService.IsPlayingSharedGameAsync(SteamSharp.SteamClient,System.String,System.Int32)">
            <summary>
            (Async) Returns the original owner's SteamID if a borrowing account is currently playing the specified game. Null if not borrowed, or the borrower isn't currently playing the game.
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#IsPlayingSharedGame_.28v0001.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return friend's list for.</param>
            <param name="gameID">GameID (AppID) of the game you're interested in querying.</param>
            <returns></returns>
        </member>
        <member name="T:SteamSharp.PlayerService.GetOwnedGamesResponse">
            <summary>
            Object for executing the GetOwnedGames API call.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.GetOwnedGamesResponse.OwnedGames">
            <summary>
            Information about the specified Steam user's games library.
            </summary>
        </member>
        <member name="T:SteamSharp.PlayerService.OwnedGames">
            <summary>
            Information about the specified Steam user's games library.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.OwnedGames.GameCount">
            <summary>
            The total number of games the user owns (including free games they've played, if getPlayedFreeGames is set).
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.OwnedGames.Games">
            <summary>
            List of <see cref="T:SteamSharp.PlayerService.Game"/>s that are owned by the specified user.
            </summary>
        </member>
        <member name="T:SteamSharp.PlayerService.GetRecentlyPlayedGamesResponse">
            <summary>
            Object for executing the GetOwnedGames API call.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.GetRecentlyPlayedGamesResponse.PlayedGames">
            <summary>
            Information about the games the specified Steam user has played recently.
            </summary>
        </member>
        <member name="T:SteamSharp.PlayerService.PlayedGames">
            <summary>
            Information about the games the specified Steam user has played recently.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.PlayedGames.TotalCount">
            <summary>
            The total number of unique games the user has played in the last two weeks.
            This is mostly significant if you opted to return a limited number of games with the count input parameter.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.PlayedGames.Games">
            <summary>
            List of <see cref="T:SteamSharp.PlayerService.Game"/>s that have been recently played by the user.
            </summary>
        </member>
        <member name="T:SteamSharp.PlayerService.IsPlayingSharedGameResponse">
            <summary>
            Object for executing the IsPlayingSharedGame API call.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.IsPlayingSharedGameResponse.IsPlayingSharedGame">
            <summary>
            Containing object for the data of the IsPlayingSharedGame API call.
            </summary>
        </member>
        <member name="T:SteamSharp.PlayerService.IsPlayingSharedGameObject">
            <summary>
            Containing object for the data of the IsPlayingSharedGame API call.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.IsPlayingSharedGameObject.LenderSteamID">
            <summary>
            The SteamID of the original owner if the given account currently plays this game and it's borrowed. In all other cases the result is 0.
            </summary>
        </member>
        <member name="T:SteamSharp.PlayerService.SharedGameData">
            <summary>
            Object containing a flag indicating if the requested game is currently being played by the requested user, and the IDs of both parties.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.SharedGameData.IsUserPlayingSharedGame">
            <summary>
            Flag indicating if the user specified is in fact currently playing the game specified.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.SharedGameData.GameBorrowerSteamID">
            <summary>
            SteamID of the user who's borrowing the game.
            If the game is being borrowed, this will always be the value of the SteamID specified in the query.
            If IsUserPlayingSharedGame is false, this will be null.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.SharedGameData.GameOwnerSteamID">
            <summary>
            SteamID of the original owner of the game being borrowed.
            If IsUserPlayingSharedGame is false, this will be null. 
            </summary>
        </member>
        <member name="T:SteamSharp.PlayerService.Game">
            <summary>
            News information for the specified GameID/AppID.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.Game.GameID">
            <summary>
            Unique ID of the Game (synonymous with AppID).
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.Game.Name">
            <summary>
            Name of the game.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.Game.PlaytimeForever">
            <summary>
            The total number of minutes played "on record", since Steam began tracking total playtime in early 2009.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.Game.PlaytimeTwoWeeks">
            <summary>
            The total number of minutes played in the last 2 weeks.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.Game.ImgIconURL">
            <summary>
            Full URL for the Game's icon image.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.Game.ImgLogoURL">
            <summary>
            Fully URL for the Game's logo image.
            </summary>
        </member>
        <member name="P:SteamSharp.PlayerService.Game.HasCommunityVisibileStats">
            <summary>
            (Set on GetOwnedGames calls only)
            Indicates there is a stats page with achievements or other game stats available for this game.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamNews">
            <summary>
            Class allowing for abstracted querying of the ISteamNews interface
            </summary>
        </member>
        <member name="M:SteamSharp.SteamNews.GetNewsForApp(SteamSharp.SteamClient,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the latest of a game specified by its AppID.
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetNewsForApp_.28v0002.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="appID">AppID of the game you want the news of.</param>
            <param name="count">How many news enties you want to get returned.</param>
            <param name="maxLength">Maximum length of each news entry.</param>
            <returns>An <see cref="T:SteamSharp.SteamNews.AppNews"/> object.</returns>
        </member>
        <member name="M:SteamSharp.SteamNews.GetNewsForAppAsync(SteamSharp.SteamClient,System.Int32,System.Int32,System.Int32)">
            <summary>
            (Asynchronous) Returns the latest of a game specified by its AppID.
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetNewsForApp_.28v0002.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="appID">AppID of the game you want the news of.</param>
            <param name="count">How many news enties you want to get returned.</param>
            <param name="maxLength">Maximum length of each news entry.</param>
            <returns>An <see cref="T:SteamSharp.SteamNews.AppNews"/> object.</returns>
        </member>
        <member name="T:SteamSharp.SteamNews.GetNewsForAppResponse">
            <summary>
            Object for executing the GetNewsForApp API call.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamNews.GetNewsForAppResponse.AppNews">
            <summary>
            Containing object for the data of the GetNewsForApp API call.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamNews.AppNews">
            <summary>
            Containing object for the data of the GetNewsForApp API call.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamNews.AppNews.AppID">
            <summary>
            AppID of the game you want the news of.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamNews.AppNews.NewsItems">
            <summary>
            A list of <see cref="T:SteamSharp.SteamNews.NewsItem"/>s, providing information on the specific application.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamNews.NewsItem">
            <summary>
            News information for the specified AppID.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamNews.NewsItem.GID">
            <summary>
            Unique ID for the given news article.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamNews.NewsItem.Title">
            <summary>
            Title of the news article.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamNews.NewsItem.Url">
            <summary>
            Full URL to the article.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamNews.NewsItem.IsExternalURL">
            <summary>
            Boolean indicating if the news article is external to the Steam community.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamNews.NewsItem.Author">
            <summary>
            Name of the article's author.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamNews.NewsItem.Contents">
            <summary>
            Snippet of the article's text. Character count of this field is selected via the maxLength parameter.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamNews.NewsItem.FeedLabel">
            <summary>
            Comma-separated string of keywords.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamNews.NewsItem.Date">
            <summary>
            DateTime the article was posted.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamNews.NewsItem.FeedName">
            <summary>
            Friendly name ID of the specified feed (i.e. rps, steam_updates, tf2_blog).
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserStats">
            <summary>
            Class allowing for abstracted querying of the ISteamUserStats interface
            </summary>
        </member>
        <member name="M:SteamSharp.SteamUserStats.GetGlobalAchievementPercentagesForApp(SteamSharp.SteamClient,System.Int32)">
            <summary>
            Returns global achievements overview for a specific game (in percentages)
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetGlobalAchievementPercentagesForApp_.28v0002.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="gameID">AppID of the game you want the news of.</param>
            <returns>A List of <see cref="T:SteamSharp.SteamUserStats.GlobalAchievement"/> objects containing the achievement name and percentage.</returns>
        </member>
        <member name="M:SteamSharp.SteamUserStats.GetGlobalAchievementPercentagesForAppAsync(SteamSharp.SteamClient,System.Int32)">
            <summary>
            (Asynchronous) Returns global achievements overview for a specific game (in percentages)
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetGlobalAchievementPercentagesForApp_.28v0002.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="gameID">AppID of the game you want the news of.</param>
            <returns>A List of <see cref="T:SteamSharp.SteamUserStats.GlobalAchievement"/> objects containing the achievement name and percentage.</returns>
        </member>
        <member name="M:SteamSharp.SteamUserStats.GetPlayerAchievements(SteamSharp.SteamClient,System.String,System.Int32)">
            <summary>
            Returns a list of achievements for the requested user by GameID (AppID)
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetPlayerAchievements_.28v0001.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return friend's list for.</param>
            <param name="gameID">AppID of the game you want the news of.</param>
            <returns><see cref="T:SteamSharp.SteamUserStats.PlayerAchievements"/> object containing game name and list of <see cref="T:SteamSharp.SteamUserStats.Achievement"/> objects.</returns>
        </member>
        <member name="M:SteamSharp.SteamUserStats.GetPlayerAchievements(SteamSharp.SteamClient,System.String,System.Int32,SteamSharp.RequestedLangage)">
            <summary>
            Returns a list of achievements for the requested user by GameID (AppID)
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetPlayerAchievements_.28v0001.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return friend's list for.</param>
            <param name="gameID">AppID of the game you want the news of.</param>
            <param name="returnLanguage">Desired language for the "name" and "description" properties of returned <see cref="T:SteamSharp.SteamUserStats.Achievement"/> objects.</param>
            <returns><see cref="T:SteamSharp.SteamUserStats.PlayerAchievements"/> object containing game name and list of <see cref="T:SteamSharp.SteamUserStats.Achievement"/> objects.</returns>
        </member>
        <member name="M:SteamSharp.SteamUserStats.GetPlayerAchievementsAsync(SteamSharp.SteamClient,System.String,System.Int32)">
            <summary>
            (Asynchronous) Returns a list of achievements for the requested user by GameID (AppID)
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetPlayerAchievements_.28v0001.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return friend's list for.</param>
            <param name="gameID">AppID of the game you want the news of.</param>
            <returns><see cref="T:SteamSharp.SteamUserStats.PlayerAchievements"/> object containing game name and list of <see cref="T:SteamSharp.SteamUserStats.Achievement"/> objects.</returns>
        </member>
        <member name="M:SteamSharp.SteamUserStats.GetPlayerAchievementsAsync(SteamSharp.SteamClient,System.String,System.Int32,SteamSharp.RequestedLangage)">
            <summary>
            (Asynchronous) Returns a list of achievements for the requested user by GameID (AppID)
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetPlayerAchievements_.28v0001.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return friend's list for.</param>
            <param name="gameID">AppID of the game you want the news of.</param>
            <param name="returnLanguage">Desired language for the "name" and "description" properties of returned <see cref="T:SteamSharp.SteamUserStats.Achievement"/> objects.</param>
            <returns><see cref="T:SteamSharp.SteamUserStats.PlayerAchievements"/> object containing game name and list of <see cref="T:SteamSharp.SteamUserStats.Achievement"/> objects.</returns>
        </member>
        <member name="M:SteamSharp.SteamUserStats.GetUserStatsForGame(SteamSharp.SteamClient,System.String,System.Int32)">
            <summary>
            Returns a list of stats for this user by GameID (App ID).
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetUserStatsForGame_.28v0002.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return friend's list for.</param>
            <param name="gameID">AppID of the game you want the news of.</param>
            <returns><see cref="T:SteamSharp.SteamUserStats.PlayerStats"/> object containing game name and list of <see cref="T:SteamSharp.SteamUserStats.Stat"/> objects.</returns>
        </member>
        <member name="M:SteamSharp.SteamUserStats.GetUserStatsForGameAsync(SteamSharp.SteamClient,System.String,System.Int32)">
            <summary>
            (Asynchronous) Returns a list of stats for this user by GameID (App ID).
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetUserStatsForGame_.28v0002.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return friend's list for.</param>
            <param name="gameID">AppID of the game you want the news of.</param>
            <returns><see cref="T:SteamSharp.SteamUserStats.PlayerStats"/> object containing game name and list of <see cref="T:SteamSharp.SteamUserStats.Stat"/> objects.</returns>
        </member>
        <member name="T:SteamSharp.SteamUserStats.GetGlobalAchievementPercentagesForAppResponse">
            <summary>
            Object for executing the GetGlobalAchievementPercentagesForApp API call.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.GetGlobalAchievementPercentagesForAppResponse.AchievementPercentages">
            <summary>
            Containing object for the response of the GetGlobalAchievementPercentagesForApp API call.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserStats.AchievementPercentages">
            <summary>
            Containing object for the response of the GetGlobalAchievementPercentagesForApp API call.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.AchievementPercentages.Achievements">
            <summary>
            List of global achievements for the specified GameID.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserStats.GlobalAchievement">
            <summary>
            Individual achievement for the specified GameID, providing information on its completion.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.GlobalAchievement.APIName">
            <summary>
            API Name of the achievement (i.e. TF_SCOUT_LONG_DISTANCE_RUNNER, TF_HEAVY_DAMAGE_TAKEN).
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.GlobalAchievement.Percent">
            <summary>
            Percentage of that achievement's global completion.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserStats.GetPlayerAchievementsResponse">
            <summary>
            Object for executing the GetPlayerAchievements API call.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.GetPlayerAchievementsResponse.PlayerAchievements">
            <summary>
            Achievement status of player's 
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserStats.PlayerAchievements">
            <summary>
            Containing object for executing the GetPlayerAchievements API call.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.PlayerAchievements.SteamID">
            <summary>
            64bit SteamID of the user.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.PlayerAchievements.GameName">
            <summary>
            Friendly name of the game specified (i.e. "Team Fortress 2")
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.PlayerAchievements.Achievements">
            <summary>
            List of possible <see cref="T:SteamSharp.SteamUserStats.Achievement"/>s for the game specified. <see cref="T:SteamSharp.SteamUserStats.Achievement"/> contains data about the specified user's progress.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserStats.Achievement">
            <summary>
            Information about a possible achievement for the game specified, containing data about the specified user's progress.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.Achievement.APIName">
            <summary>
            API Name of the achievement (i.e. TF_SCOUT_LONG_DISTANCE_RUNNER, TF_HEAVY_DAMAGE_TAKEN).
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.Achievement.IsAchieved">
            <summary>
            Flag indicating whether or not the specified user has completed this achievement.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.Achievement.Name">
            <summary>
            Friendly name of the achievement (in the language specified, defaults to English). In example, "Race for the Pennant."
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.Achievement.Description">
            <summary>
            Description of the achievement (in the language specified, defaults to English). In example, "Run 25 kilometers."
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserStats.GetUserStatsForGameResponse">
            <summary>
            Object for executing the GetPlayerAchievements API call.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.GetUserStatsForGameResponse.PlayerStats">
            <summary>
            Achievement status of player's 
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserStats.PlayerStats">
            <summary>
            Containing object for executing the GetPlayerAchievements API call.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.PlayerStats.SteamID">
            <summary>
            64bit SteamID of the user.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.PlayerStats.GameName">
            <summary>
            Friendly name of the game specified (i.e. "Team Fortress 2")
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.PlayerStats.Stats">
            <summary>
            List of possible <see cref="T:SteamSharp.SteamUserStats.Stat"/>s for the game specified. <see cref="T:SteamSharp.SteamUserStats.Stat"/> contains data about the user's specific accomplishment.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserStats.Stat">
            <summary>
            Information about a possible stat for the game specified, containing data about the specified user's progress.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.Stat.APIName">
            <summary>
            API name of the stat (i.e. Scout.accum.iBuildingsDestroyed, Soldier.accum.iDominations)
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserStats.Stat.Value">
            <summary>
            Value of the stat for the specified user.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserInterface">
            <summary>
            Class allowing for abstracted querying of the ISteamUser interface
            </summary>
        </member>
        <member name="M:SteamSharp.SteamUserInterface.GetPlayerSummary(SteamSharp.SteamClient,System.String)">
            <summary>
            (Requires <see cref="T:SteamSharp.Authenticators.APIKeyAuthenticator"/>)
            Returns basic profile information for a given 64-bit Steam ID.
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetPlayerSummaries_.28v0002.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return profile information for.</param>
            <returns>
            Returns profile data for the requested user in the form of a <see cref="T:SteamSharp.SteamUserInterface.Player"/> object. 
            Some data associated with a Steam account may be hidden if the user has their profile visibility set to "Friends Only" or "Private". In that case, only public data will be returned.
            </returns>
        </member>
        <member name="M:SteamSharp.SteamUserInterface.GetPlayerSummaries(SteamSharp.SteamClient,System.String[])">
            <summary>
            (Requires <see cref="T:SteamSharp.Authenticators.APIKeyAuthenticator"/>)
            Returns basic profile information for a list of 64-bit Steam IDs.
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetPlayerSummaries_.28v0002.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamIDs">List of 64 bit Steam IDs to return profile information for. Up to 100 Steam IDs can be requested.</param>
            <returns>
            Returns a large amount of profile data for the requested users in the form of a <see cref="T:SteamSharp.SteamUserInterface.Player"/> object. 
            Some data associated with a Steam account may be hidden if the user has their profile visibility set to "Friends Only" or "Private". In that case, only public data will be returned.
            </returns>
        </member>
        <member name="M:SteamSharp.SteamUserInterface.GetPlayerSummaryAsync(SteamSharp.SteamClient,System.String)">
            <summary>
            (Requires <see cref="T:SteamSharp.Authenticators.APIKeyAuthenticator"/>)
            (Async) Returns basic profile information for a given 64-bit Steam ID.
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetPlayerSummaries_.28v0002.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return profile information for.</param>
            <returns>
            Returns profile data for the requested user in the form of a <see cref="T:SteamSharp.SteamUserInterface.Player"/> object. 
            Some data associated with a Steam account may be hidden if the user has their profile visibility set to "Friends Only" or "Private". In that case, only public data will be returned.
            </returns>
        </member>
        <member name="M:SteamSharp.SteamUserInterface.GetPlayerSummariesAsync(SteamSharp.SteamClient,System.String[])">
            <summary>
            (Requires <see cref="T:SteamSharp.Authenticators.APIKeyAuthenticator"/>)
            (Async) Returns basic profile information for a list of 64-bit Steam IDs.
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetPlayerSummaries_.28v0002.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamIDs">List of 64 bit Steam IDs to return profile information for. Up to 100 Steam IDs can be requested.</param>
            <returns>
            Returns a large amount of profile data for the requested users in the form of a <see cref="T:SteamSharp.SteamUserInterface.Player"/> object. 
            Some data associated with a Steam account may be hidden if the user has their profile visibility set to "Friends Only" or "Private". In that case, only public data will be returned.
            </returns>
        </member>
        <member name="M:SteamSharp.SteamUserInterface.GetFriendList(SteamSharp.SteamClient,System.String,SteamSharp.PlayerRelationshipType)">
            <summary>
            (Requires <see cref="T:SteamSharp.Authenticators.APIKeyAuthenticator"/>)
            Returns the friend list of any Steam user, provided the user's Steam Community profile visibility is set to "Public."
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetFriendList_.28v0001.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return friend's list for.</param>
            <param name="relationship">Relationship filter. Possibles values: all, friend.</param>
            <returns>List of <see cref="T:SteamSharp.SteamUserInterface.Friend"/> objects mapping to the Friend's list of the target user.</returns>
        </member>
        <member name="M:SteamSharp.SteamUserInterface.GetFriendListAsync(SteamSharp.SteamClient,System.String,SteamSharp.PlayerRelationshipType)">
            <summary>
            (Requires <see cref="T:SteamSharp.Authenticators.APIKeyAuthenticator"/>)
            (Async) Returns the friend list of any Steam user, provided the user's Steam Community profile visibility is set to "Public."
            Throws <see cref="T:SteamSharp.SteamRequestException"/> on failure.
            <a href="https://developer.valvesoftware.com/wiki/Steam_Web_API#GetFriendList_.28v0001.29">See official documentation.</a>
            </summary>
            <param name="client"><see cref="T:SteamSharp.SteamClient"/> instance to use.</param>
            <param name="steamID">SteamID to return friend's list for.</param>
            <param name="relationship">Relationship filter. Possibles values: all, friend.</param>
            <returns>List of <see cref="T:SteamSharp.SteamUserInterface.Friend"/> objects mapping to the Friend's list of the target user.</returns>
        </member>
        <member name="T:SteamSharp.SteamUserInterface.GetPlayerSummariesResponse">
            <summary>
            Object for executing the GetPlayerSummaries API call.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.GetPlayerSummariesResponse.Response">
            <summary>
            Containing object for the data of the GetPlayerSummaries API call.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserInterface.GetPlayerSummariesContainer">
            <summary>
            Containing object for the data of the GetPlayerSummaries API call.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.GetPlayerSummariesContainer.Players">
            <summary>
            List containing the Player objects selected via the SteamIDs specified.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserInterface.Player">
            <summary>
            Object representing the Steam information for a specific user.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.SteamID">
            <summary>
            64bit SteamID of the user.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.CommunityVisibilityState">
            <summary>
            This represents whether the profile is visible or not, and if it is visible, why you are allowed to see it.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.IsProfileSet">
            <summary>
            Indicates if the user has set their public profile. Maps to the "profilestate" API property.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.PersonaName">
            <summary>
            The player's persona name (display name).
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.LastLogOff">
            <summary>
            DateTime the user last logged off.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.ProfileURL">
            <summary>
            The full URL of the user's Steam Community Profile.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.AvatarURL">
            <summary>
            The full URL of the user's 32x32px avatar. If the user hasn't configured an avatar this will be the default ? avatar.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.AvatarMediumURL">
            <summary>
            The full URL of the user's 64x64px avatar. If the user hasn't configured an avatar this will be the default ? avatar.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.AvatarFullURL">
            <summary>
            The full URL of the user's 184x184px avatar. If the user hasn't configured an avatar this will be the default ? avatar.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.PersonaState">
            <summary>
            The user's current status.
            If the player's profile is private, this will always be "Offline", except if the user has set their status to looking to trade or looking to play (due to a bug, not long term behavior!).
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.RealName">
            <summary>
            The player's "Real Name", if they have set it.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.PrimaryClanID">
            <summary>
            The player's primary group, as configured in their Steam Community profile.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.DateTimeCreated">
            <summary>
            The DateTime the player's account was created. Maps to the "timecreated" API property.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.PersonaStateFlags">
            <summary>
            This is delivered on the response but is not documented. Object is a string as the full set of deserialization possibilities is unknown.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.GameExtraInfo">
            <summary>
            If the user is currently in-game, this will be the name of the game they are playing. If no game is being played this value is null.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.GameID">
            <summary>
            If the user is currently in-game, this value will be returned and set to the GameID of that game. Otherwise value is null.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.LocCountryCode">
            <summary>
            If set on the user's Steam Community profile, The user's country of residence, 2-character ISO country code.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.LocStateCode">
            <summary>
            If set on the user's Steam Community profile, The user's state of residence.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Player.LocCityID">
            <summary>
            An internal code indicating the user's city of residence. A future update will provide this data in a more useful way.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserInterface.GetFriendsListResponse">
            <summary>
            Response object for the data of the GetFriendsList API call.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.GetFriendsListResponse.FriendsList">
            <summary>
            Container for the FriendsList object response.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserInterface.FriendsList">
            <summary>
            Containing object for the data of the GetFriendsList API call.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.FriendsList.Friends">
            <summary>
            List of Friends for specified user.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUserInterface.Friend">
            <summary>
            Object representing a single Friend of the specified user.
            Additional information can be pulled on the users by making a GetPlayerSummaries call with all SteamIDs contained in the List enumeration.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Friend.SteamID">
            <summary>
            64bit SteamID of the user.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Friend.Relationship">
            <summary>
            Relationship filter for profile/friend's list filtering.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUserInterface.Friend.FriendSinceDateTime">
            <summary>
            DateTime of when the relationship was created.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamID">
            <summary>
            Object representing a Steam ID.
            </summary>
        </member>
        <member name="M:SteamSharp.SteamID.#ctor(System.String)">
            <summary>
            Initialize SteamID from string.
            </summary>
            <param name="steamID"></param>
        </member>
        <member name="T:SteamSharp.SteamInterfaceHelpers">
            <summary>
            Utility class used in the Steam Interface classes.
            </summary>
        </member>
        <member name="M:SteamSharp.SteamInterfaceHelpers.FromUnixTime(System.Int64)">
            <summary>
            Creates DateTime value (assumes UTC timezone) from a Unix based timestamp
            </summary>
            <param name="target">Unix timestamp to convert</param>
            <returns>DateTime object representing the UTC DateTime of the target</returns>
        </member>
        <member name="M:SteamSharp.SteamInterfaceHelpers.ToUnixTime(System.DateTime)">
            <summary>
            Converts a DateTime object into its Unix based timestamp equivalent. Uses the timezone of the initial DateTime object.
            </summary>
            <param name="target">DateTime object to convert.</param>
            <returns>On success, returns 64-bit integer conforming to the Unix timestamp format. On failure, returns -1.</returns>
        </member>
        <member name="T:SteamSharp.SteamInterfaceHelpers.UnixDateTimeConverter">
            <summary>
            Json.Net converter class for reading/writing Unix Time from/to JSON.
            </summary>
        </member>
        <member name="M:SteamSharp.SteamInterfaceHelpers.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the converted object (DateTime --> 64-bit integer).
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The 64-bit integer equivalent of the specified DateTime object.</returns>
        </member>
        <member name="M:SteamSharp.SteamInterfaceHelpers.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Read the JSON representation of the converted object (64-bit integer --&gt; DateTime)
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>DateTime object representing the 64-bit integer Unix timestamp.</returns>
        </member>
        <member name="T:SteamSharp.SteamRequestParameter">
            <summary>
            Containing object for data intended to be sent as request parameters.
            </summary>
        </member>
        <member name="M:SteamSharp.SteamRequestParameter.ToString">
            <summary>
            Return a query-string formatted representation of this parameter
            </summary>
            <returns>String</returns>
        </member>
        <member name="P:SteamSharp.SteamRequestParameter.Name">
            <summary>
            Parameter's name
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequestParameter.Value">
            <summary>
            Parameter's value
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequestParameter.Type">
            <summary>
            Type of the parameter
            </summary>
        </member>
        <member name="T:SteamSharp.SteamClient">
            <summary>
            Main transport class for all requests and responses to and from the Steam API.
            This class is used to execute all requests, as well as provide authentication and transaction control.
            </summary>
        </member>
        <member name="M:SteamSharp.SteamClient.Execute(SteamSharp.ISteamRequest)">
            <summary>
            Executes the provided request synchronously, returning the response object.
            </summary>
            <param name="request"><see cref="T:SteamSharp.ISteamRequest"/> object for execution.</param>
            <returns><see cref="T:SteamSharp.ISteamResponse"/> object containing the result of the request.</returns>
        </member>
        <member name="M:SteamSharp.SteamClient.ExecuteAsync(SteamSharp.ISteamRequest)">
            <summary>
            Executes the provided request asynchronously, returning the response object.
            </summary>
            <param name="request"><see cref="T:SteamSharp.ISteamRequest"/> object for execution.</param>
            <returns><see cref="T:SteamSharp.ISteamResponse"/> object containing the result of the request.</returns>
        </member>
        <member name="M:SteamSharp.SteamClient.AuthenticateClient(SteamSharp.SteamClient,SteamSharp.ISteamRequest)">
            <summary>
            Authenticates the client with the Steam API.
            </summary>
            <param name="client">SteamClient instance to be authenticated.</param>
            <param name="request">Request requiring authentication.</param>
        </member>
        <member name="M:SteamSharp.SteamClient.#ctor">
            <summary>
            Creates a SteamClient which facilitates requests to and responses from the Steam API.
            All Steam API transactions are conducted through this object.
            </summary>
        </member>
        <member name="M:SteamSharp.SteamClient.#ctor(System.String)">
            <summary>
            Creates a SteamClient with a Steam API endpoint at the specified value.
            Using this constructor is not recommended unless mitigating a known change in the Steam API endpoint or during execution of a test case.
            </summary>
            <param name="customApiEndpoint">Base URL for the Steam API Endpoint</param>
        </member>
        <member name="M:SteamSharp.SteamClient.BuildUri(SteamSharp.ISteamRequest)">
            <summary>
            Helper method which creates the final Uri used in the HTTP request.
            </summary>
            <param name="request">Request for execution.</param>
            <returns>Well formed Uri for use in an <see cref="T:System.Net.Http.HttpRequestMessage"/>.</returns>
        </member>
        <member name="M:SteamSharp.SteamClient.BuildHttpRequest(SteamSharp.ISteamRequest)">
            <summary>
            Constructs the <see cref="T:System.Net.HttpWebRequest"/> object which will be used to execute the web request. 
            </summary>
            <param name="request">Request for execution.</param>
        </member>
        <member name="M:SteamSharp.SteamClient.SerializeBodyWithParameters(SteamSharp.ISteamRequest,SteamSharp.SteamRequestParameter)">
            <summary>
            Utility method for POST requests. We must produce an object array such that it can be serialized (non-Raw POST style requests).
            </summary>
            <param name="request">Request to be evaluated.</param>
            <param name="body">Current parameter intended for addition to the body of the request.</param>
            <returns>Content which can be sent over the HTTP Request, including all parameters (both body and GetOrPost).</returns>
        </member>
        <member name="F:SteamSharp.SteamClient._version">
            <summary>
            Pulls the current version of SteamSharp. This is the recommended way in .NET 4.5+.
            Note: Assembly.GetExecutingAssembly() does not work in Windows Store (and is expensive in its execution).
            </summary>
        </member>
        <member name="P:SteamSharp.SteamClient.BaseAPIEndpoint">
            <summary>
            Steam API endpoint. This could be subject to change and thus needs to be overrideable.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamClient.Timeout">
            <summary>
            Timeout, in milliseconds, for requests executed by this client instance. Defaults to 10 seconds.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamClient.DefaultParameters">
            <summary>
            Parameters that should be included with every request executed via this instance
            If specified in both the client and request, the request's parameter is used.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamClient.Authenticator">
            <summary>
            Authenticator to use for requests made by this client instance.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamClient.AssemblyVersion">
            <summary>
            Version of the SteamSharp library currently being run.
            </summary>
        </member>
        <member name="T:SteamSharp.SteamRequest">
            <summary>
            Container for data used to make Steam API requests.
            </summary>
        </member>
        <member name="M:SteamSharp.SteamRequest.#ctor(System.String,System.Net.Http.HttpMethod)">
            <summary>
            Initializes SteamRequest with the targeted resource URL and the HTTP Method for the request.
            </summary>
            <param name="resource">Resource to use for this request</param>
            <param name="method">HTTP Method to use for this request</param>
        </member>
        <member name="M:SteamSharp.SteamRequest.#ctor(System.String)">
            <summary>
            Initializes SteamRequest with the targeted resource URL.
            </summary>
            <param name="resource">Resource to use for this request</param>
        </member>
        <member name="M:SteamSharp.SteamRequest.#ctor(System.Uri)">
            <summary>
            Initializes SteamRequest with the targeted resource URL.
            </summary>
            <param name="resource">Resource to use for this request</param>
        </member>
        <member name="M:SteamSharp.SteamRequest.#ctor(System.Uri,System.Net.Http.HttpMethod)">
            <summary>
            Initializes SteamRequest with the targeted resource URL and the HTTP Method for the request.
            </summary>
            <param name="resource">Resource to use for this request</param>
            <param name="method">HTTP Method to use for this request</param>
        </member>
        <member name="M:SteamSharp.SteamRequest.#ctor(SteamSharp.SteamAPIInterface,System.String,SteamSharp.SteamMethodVersion)">
            <summary>
            Initializes SteamRequest with a GET resource constructed via the Steam Interface, Steam API Method, and Steam API Version
            </summary>
            <param name="steamInterface">Steam API Interface to access (i.e. ISteamNews)</param>
            <param name="steamApi">Method within the Steam API to use (i.e. GetNewsForApp)</param>
            <param name="version">Version of the API being requested (i.e. v0001)</param>
        </member>
        <member name="M:SteamSharp.SteamRequest.#ctor(SteamSharp.SteamAPIInterface,System.String,SteamSharp.SteamMethodVersion,System.Net.Http.HttpMethod)">
            <summary>
            Initializes SteamRequest with a resource constructed via the Steam Interface, Steam API Method, and Steam API Version
            </summary>
            <param name="steamInterface">Steam API Interface to access (i.e. ISteamNews)</param>
            <param name="steamApi">Method within the Steam API to use (i.e. GetNewsForApp)</param>
            <param name="version">Version of the API being requested (i.e. v0001)</param>
            <param name="method">HTTP Method to use for this request</param>
        </member>
        <member name="M:SteamSharp.SteamRequest.AddBody(System.Object)">
            <summary>
            Serializes object into JSON which is then used as the Body of the HTTP request.
            If the request body had already been set, then the body is overwritten with the new value.
            </summary>
            <param name="obj">Object to be serialized and used as the Body of the HTTP request.</param>
            <returns>This request</returns>
        </member>
        <member name="M:SteamSharp.SteamRequest.AddUrlSegment(System.String,System.String)">
            <summary>
            Registers a URL Segement with the request. This will replace {name} with value in the specified Resource.
            Updates value if segement already exists.
            </summary>
            <param name="name">Name of the segement to register.</param>
            <param name="value">Value to replace the named segement with.</param>
            <returns>This request.</returns>
        </member>
        <member name="M:SteamSharp.SteamRequest.AddHeader(System.String,System.String)">
            <summary>
            Adds an custom HTTP Header to the request. Updates value if header already exists.
            </summary>
            <param name="name">The name of the header (i.e. X-CustomHeader)</param>
            <param name="value">The value of the custom header</param>
            <returns>This request</returns>
        </member>
        <member name="M:SteamSharp.SteamRequest.AddParameter(System.String,System.Object)">
            <summary>
            Adds a parameter to the request. Updates value if parameter already exists.
            </summary>
            <param name="name">Name of the parameter</param>
            <param name="value">Value of the parameter</param>
            <returns>This request</returns>
        </member>
        <member name="M:SteamSharp.SteamRequest.AddParameter(System.String,System.Object,SteamSharp.ParameterType)">
            <summary>
            Adds a parameter to the request. Updates value if parameter already exists.
            </summary>
            <param name="name">Name of the parameter</param>
            <param name="value">Value of the parameter</param>
            <param name="type">The type of the parameter</param>
            <returns>This request</returns>
        </member>
        <member name="M:SteamSharp.SteamRequest.AddParameter(SteamSharp.SteamRequestParameter)">
            <summary>
            Adds a parameter to the request.
            </summary>
            <param name="param"><see cref="T:SteamSharp.SteamRequestParameter"/> to add to the request.</param>
            <returns>This request</returns>
        </member>
        <member name="M:SteamSharp.SteamRequest.AddCookie(System.Net.Cookie)">
            <summary>
            Adds a <see cref="T:System.Net.Cookie"/> to the request.
            </summary>
            <param name="cookie"><see cref="T:System.Net.Cookie"/> to be added to the request.</param>
            <returns>This request</returns>
        </member>
        <member name="M:SteamSharp.SteamRequest.IncreaseNumAttempts">
            <summary>
            Method that allows the request's attempt count to be incremented.
            Should only be called by the SteamClient doing an execution operation.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequest.Parameters">
            <summary>
            Container of all parameters needing to be passed to the Steam API.
            See AddParameter() for adding additional parameters to the request.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequest.Cookies">
            <summary>
            Container for cookies to be added to the HTTP request. To add cookies use AddCookie( Cookie ).
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequest.Method">
            <summary>
            Indicates the standard HTTP method that should be used for this request.
            This value defaults to GET.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequest.DataFormat">
            <summary>
            Data Format to use for POST Requests.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequest.Resource">
            <summary>
            The URI the request will be made against.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequest.Timeout">
            <summary>
            Timeout in milliseconds to be used for the request. If this time is exceeded the request will fail.
            If not set, defaults to Timeout value in the SteamClient executing this request.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequest.SteamInterface">
            <summary>
            Steam API Interface to access (i.e. ISteamNews)
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequest.SteamApiMethod">
            <summary>
            Method within the Steam API to use (i.e. GetNewsForApp)
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequest.SteamMethodVersion">
            <summary>
            Version of the API being requested (i.e. v0001)
            </summary>
        </member>
        <member name="P:SteamSharp.SteamRequest.Attempts">
            <summary>
            Provides the number of times this particular request has been attempted (regardless of success).
            </summary>
        </member>
        <member name="T:SteamSharp.SteamResponse">
            <summary>
            (Interface) Container for data received from Steam API requests.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamResponse.Request">
            <summary>
            Reference to the initial request which produced this response.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamResponse.RequestUri">
            <summary>
            URI of the HTTP request which returned this response.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamResponse.HttpResponse">
            <summary>
            Contains the raw <see cref="T:System.Net.Http.HttpResponseMessage"/> object returned by the web request.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamResponse.Cookies">
            <summary>
            Cookie container for all cookies received back from the transaction call.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamResponse.ErrorMessage">
            <summary>
            If an error was encountered, this records the exception text. Null otherwise.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamResponse.ErrorException">
            <summary>
            If an error was encountered, this records the relevant exception. Null otherwise.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamResponse.ResponseStatus">
            <summary>
            Contains the state of the response. See <see cref="P:SteamSharp.SteamResponse.ResponseStatus"/> for possible values.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamResponse.StatusCode">
            <summary>
            HTTP response status code
            </summary>
        </member>
        <member name="P:SteamSharp.SteamResponse.StatusDescription">
            <summary>
            HTTP response status description
            </summary>
        </member>
        <member name="P:SteamSharp.SteamResponse.IsSuccessful">
            <summary>
            Indicates whether or not the response was a success.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamResponse.Content">
            <summary>
            Response content
            </summary>
        </member>
        <member name="T:SteamSharp.SteamUser">
            <summary>
            Object representing a Steam User. This class includes authentication data for use in authorizing a user.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUser.SteamID">
            <summary>
            User's SteamID.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUser.TransferToken">
            <summary>
            Access Token to be passed on the Steam API for requests requiring first part authentication.
            </summary>
        </member>
        <member name="P:SteamSharp.SteamUser.AuthCookie">
            <summary>
            Cookie which contains the authentication token for the user.
            </summary>
        </member>
    </members>
</doc>
